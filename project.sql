-LEAVE_INFO
CREATE TABLE LEAVE_INFO (LEAVE_CATEGORY VARCHAR 
(1) PRIMARY KEY ,
 CL INTEGER, EL INTEGER, ML INTEGER
 );

--SALARY_INFO
CREATE TABLE SALARY_INFO(EMPLOYEE_CATEGORY VARCHAR(1) PRIMARY KEY, 
BASIC DECIMAL(7,2),TRAVELLING_ALLOWANCE DECIMAL(6,2),
DEARNESS_ALLOWANCE DECIMAL(6,2),
HOUSE_RENT DECIMAL(6,2),
LOCATION_ALLOWANCE DECIMAL(6,2),
PROVIDENT_FUND DECIMAL(6,2),
MEDICAL_ALLOWANCE DECIMAL(6,2),
PROFTAX DECIMAL(6,2),INSURANCE DECIMAL(6,2)
);

--DEPARTMENT
CREATE TABLE DEPART_INFO (DEPTID VARCHAR (10) PRIMARY KEY, 
DEPTNAME VARCHAR (20), LOCATION VARCHAR (20));

--EMPLOYEE_INFO
CREATE TABLE EMPLOYEE_INFO (EMPID VARCHAR(10) PRIMARY KEY,
 EMPNAME VARCHAR(20), DEPTID VARCHAR(10),
 JOINING_DT DATE, DOB DATE,
 YRS_OF_EXP INTEGER,
EMPLOYEE_CATEGORY VARCHAR(1),
 LEAVE_CATEGORY VARCHAR(1), 
FOREIGN KEY(DEPTID) REFERENCES DEPART_INFO(DEPTID),
FOREIGN KEY(EMPLOYEE_CATEGORY) REFERENCES SALARY_INFO(EMPLOYEE_CATEGORY), 
FOREIGN KEY(LEAVE_CATEGORY) REFERENCES LEAVE_INFO(LEAVE_CATEGORY));

--EMP_LEAVE_INFO
CREATE TABLE EMP_LEAVE_INFO (EMPID VARCHAR (10), 
FROM_DATE DATE, TO_DATE DATE, TOTAL_LEAVES INTEGER,
 LEAVE_TYPE VARCHAR (5),
 CONSTRAINT LEAVE_INFO FOREIGN KEY (EMPID) 
REFERENCES EMPLOYEE_INFO
(EMPID));

--EMP_PAYROLL
CREATE TABLE EMP_PAYROLL1(TRANSNO INTEGER PRIMARY KEY,
 EMPID VARCHAR(10), MONTH VARCHAR(10), 
YEAR number, TOTALEARNING INTEGER,
TOTALDEDUCTION INTEGER(10), LOPAMOUNT INTEGER,
 NETPAY INTEGER); 
 CREATE TABLE EMP_PAYROLL(TRANSNO NUMBER PRIMARY KEY,EMPID VARCHAR(10),MONTH VARCHAR(10),YEAR  INTEGER (4),
 TOTAL_EARNING  INTEGER ,TOTAL_DEDUCTION  INTEGER ,LOP_AMOUNT  INTEGER ,NETPAY  INTEGER );
 
 DROP TABLE EMP_PAYROLL;
-- DATA FOR SALARY_INFO TABLE
INSERT INTO SALARY_INFO VALUES ('A',6000,1400,1200,1750,900,750,1450,260,1000);
INSERT INTO SALARY_INFO VALUES ('B',5500,1100,900,1450,700,650,1250,230,900);
INSERT INTO SALARY_INFO VALUES ('C',5000,1000,800,1350,650,500,1050,190,700);
INSERT INTO SALARY_INFO VALUES ('D',4000,900,750,1150,450,400,750,120,600);
--DATA FROM LEAVE_INFO TABLE
INSERT INTO LEAVE_INFO VALUES ('X',18,5,10);
INSERT INTO LEAVE_INFO VALUES ('Y',15,3,8);
INSERT INTO LEAVE_INFO VALUES ('Z',12,3,7);
--DATA FOR DEPT TABLE
INSERT INTO DEPART_INFO VALUES ('D001','IT','BANGALORE');
INSERT INTO DEPART_INFO VALUES ('D002','SALES','CHENNAI');
INSERT INTO DEPART_INFO VALUES ('D003','HR','COCHIN');
INSERT INTO DEPART_INFO VALUES ('D004','TRANSPORT','DELHI');
--DATA FOR EMPLOYEE_INFO TABLE
INSERT INTO EMPLOYEE_INFO VALUES ('E001','RAM','D001','01-03-2001','12-07-1979',11,'A','X');
INSERT INTO EMPLOYEE_INFO VALUES ('E002','DEV','D001','23-05-2011','11-03-1987',1,'D','Z');
INSERT INTO EMPLOYEE_INFO VALUES ('E003','SAM','D001','13-04-2011','14-11-1984',1,'D','Z');
INSERT INTO EMPLOYEE_INFO VALUES ('E004','STEVE',NULL,NULL,'25-01-1983',NULL,NULL,NULL);
INSERT INTO EMPLOYEE_INFO VALUES ('E005','OLGA','D002','02-10-2007','12-05-1979',5,'B','Y');
INSERT INTO EMPLOYEE_INFO VALUES ('E006','SANGEETHA','D003','10-07-2005','12-09-1982',7,'B','Y');
INSERT INTO EMPLOYEE_INFO VALUES ('E007','PRAKASH','D003','15-06-2009','12-08-1987',3,'D','Z');
INSERT INTO EMPLOYEE_INFO VALUES ('E008','SANA',NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO EMPLOYEE_INFO VALUES ('E009','MANO','D002','01-11-2008','12-05-1988',4,'C','Y');
INSERT INTO EMPLOYEE_INFO VALUES ('E010','DINU','D001','08-03-2006','23-03-1982',6,'B','Y');
--DATA FOR EMP_LEAVE_INFO
INSERT INTO EMP_LEAVE_INFO VALUES ('E001','04-04-2012','12-04-2012',6,'CL');
INSERT INTO EMP_LEAVE_INFO VALUES ('E002','02-03-2012','02-05-2012',1,'CL');
INSERT INTO EMP_LEAVE_INFO VALUES ('E003','04-04-2012','05-05-2012',31,'ML');
INSERT INTO EMP_LEAVE_INFO VALUES ('E004','14-02-2012','10-05-2012',1,'OH');
INSERT INTO EMP_LEAVE_INFO VALUES ('E005','14-01-2012','16-01-2012',3,'EL');
INSERT INTO EMP_LEAVE_INFO VALUES ('E001','14-04-2012','16-04-2012',2,'CL');

--DATA FOR EMP_PAYROLL
INSERT INTO EMP_PAYROLL VALUES (1,'E001','APR',2012,12700,2010,0,10690);
INSERT INTO EMP_PAYROLL VALUES (2,'E002','MAR',2012,8000,1120,0,6880);
INSERT INTO EMP_PAYROLL VALUES (3,'E003','APR',2012,8000,1120,3360,4640);
INSERT INTO EMP_PAYROLL VALUES (4,'E005','JAN',2012,10700,1780,0,8920);
INSERT INTO EMP_PAYROLL VALUES (5,'E006','JAN',2012,10700,1780,500,8420);


  
select * from LEAVE_INFO;--2
select * from SALARY_INFO;----------------1
select * from DEPART_INFO;--2
select * from EMPLOYEE_INFO;--1
select * from EMP_LEAVE_INFO;--3
select * from EMP_PAYROLL;-----------------2


------------------------------------------------------------
HR RESPONSIBLITIES

DECLARE
  l_EMPLOYEE_ID EMPLOYEE_INFO.EMPID%TYPE;
  l_EMPLOYEE_NAME EMPLOYEE_INFO.EMPNAME%TYPE;
  L_DEPT_ID EMPLOYEE_INFO.DEPTID%TYPE;
  L_EMPLOYEE_CATEGORY employee_info.employee_category%TYPE;
  L_BASIC SALARY_INFO.BASIC%TYPE;
  
BEGIN
  SELECT
    EMPID,EMPNAME,DEPTID,A.employee_category,B.BASIC
  INTO
    l_EMPLOYEE_ID,l_EMPLOYEE_NAME, L_DEPT_ID, L_EMPLOYEE_CATEGORY,L_BASIC
  FROM
    EMPLOYEE_INFO A,SALARY_INFO B
  WHERE
    a.employee_category=b.employee_category AND EMPID = '&EMPID';
  DBMS_OUTPUT.PUT_LINE(l_EMPLOYEE_ID || ' : ' || l_EMPLOYEE_NAME||' '||L_DEPT_ID||' '|| L_EMPLOYEE_CATEGORY||' '||L_BASIC);
END;

--------------------------------------------------------------------------------------------------
CREATE OR REPLACE PROCEDURE print_contact(
    in_EMPLOYEE_CATEGORY, SALARY_INFO.EMPLOYEE_CATEGORY%TYPE  
)
IS
  r_contact SALARY_INFO%ROWTYPE;
BEGIN
  -- get contact based on customer id
  SELECT *
  INTO r_contact
  FROM SALARY_INFO
  WHERE EMPLOYEE_CATEGORY = in_EMPLOYEE_CATEGORY;

  -- print out contact's information
  dbms_output.put_line( r_contact.EMPLOYEE_CATEGORY || ' ' ||
  r_contact.basic || '<' || r_contact.insurance||'>' );

EXCEPTION
   WHEN OTHERS THEN
      dbms_output.put_line( SQLERRM );
END;
-------------------------------------------------------------------------------------
CREATE OR REPLACE PROCEDURE print_contact(
    in_empid EMPLOYEE_INFO.EMPID%TYPE  
)
IS
  r_contact EMPLOYEE_INFO%ROWTYPE;
BEGIN
  -- get contact based on customer id
  SELECT *
  INTO r_contact
  FROM EMPLOYEE_INFO
  WHERE empid = IN_empid;

  -- print out contact's information
  dbms_output.put_line( r_contact.empname || ' ' ||
  r_contact.deptid || ' ' || r_contact.dob ||'>' );

EXCEPTION
   WHEN OTHERS THEN
      dbms_output.put_line( SQLERRM );
END;

-----------------------------------------------------------------------
DECLARE
  CURSOR c1 IS
    SELECT CUSTOMER_name, CUSTOMER_id
    FROM CUSTOMER_PERSONAL_INFO;
BEGIN
  FOR item IN c1
  LOOP
    DBMS_OUTPUT.PUT_LINE
      ('Name = ' || item.CUSTOMER_name || ', ID = ' || item.CUSTOMER_id);
  END LOOP;
END;

-------------------------------------------------------------------------------
DECLARE
  CURSOR c1 IS
    SELECT empname, empid
    FROM employee_info;
BEGIN
  FOR item IN c1
  LOOP
    DBMS_OUTPUT.PUT_LINE
      ('Name = ' || item.empname || ', ID = ' || item.empid);
  END LOOP;
END;

---------------------------------------------------------------------------------
DECLARE
    CURSOR C IS 
        SELECT EMPLOYEE_CATEGORY,BASIC
        FROM SALARY_INFO;
    V_BASIC SALARY_INFO.BASIC%TYPE;
    V_EMPLOYEE_CATEGORY SALARY_INFO.EMPLOYEE_CATEGORY%TYPE;
BEGIN
    OPEN C;
    LOOP
        FETCH C INTO V_BASIC,V_EMPLOYEE_CATEGORY;
        EXIT WHEN C%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE(V_BASIC||' '||V_EMPLOYEE_CATEGORY);
    END LOOP;
    CLOSE C;
END;

-----------------------------------------------------------------------
CREATE OR REPLACE PROCEDURE print_contact(
    in_empid EMP_LEAVE_INFO.EMPID%TYPE  
)
IS
  r_contact EMP_LEAVE_INFO%ROWTYPE;
BEGIN
  -- get contact based on customer id
  SELECT *
  INTO r_contact
  FROM EMP_LEAVE_INFO
  WHERE EMPid = IN_EMPid;

  -- print out contact's information
  dbms_output.put_line( r_contact.EMPID || ' ' ||
  r_contact.TOTAL_LEAVES || ' ' || r_contact.LEAVE_TYPE ||' ' );

EXCEPTION
   WHEN OTHERS THEN
      dbms_output.put_line( SQLERRM );
END;


